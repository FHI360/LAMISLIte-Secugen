package org.fhi360.lamis.mobile.lite.Db;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import android.content.Context;import org.fhi360.lamis.mobile.lite.Utils.Constant;public class LAMISLiteDb extends SQLiteOpenHelper {    private static LAMISLiteDb instance = null;    private String CREATE_INDEX_CONTACT_TABLE = "CREATE TABLE " + Constant.TABLE_INDEX_CONTACT + "("            + Constant.id + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.htsId + "  TEXT,"            + Constant.facilityId + "  TEXT,"            + Constant.clientCode + " TEXT,"            + Constant.contactType + " TEXT,"            + Constant.surname + " TEXT,"            + Constant.otherNames + " TEXT,"            + Constant.age + " INTEGER,"            + Constant.gender + " TEXT,"            + Constant.address + " TEXT,"            + Constant.phone + " TEXT,"            + Constant.relation + " TEXT,"            + Constant.gbv + " TEXT,"            + Constant.durationPartner + " INTEGER,"            + Constant.phoneTracking + " TEXT,"            + Constant.visitTracking + " TEXT,"            + Constant.outcome + " TEXT,"            + Constant.dateHivTest + " TEXT,"            + Constant.hivStatus + " TEXT,"            + Constant.linkCare + " TEXT,"            + Constant.indexContactCode + " TEXT,"            + Constant.partnerNotification + " TEXT,"            + Constant.modeNotification + " TEXT,"            + Constant.serviceProvided + " TEXT,"            + Constant.deviceId + " LONG"            +            ")";    private String CREATE_HTS_TABLE = "CREATE TABLE " + Constant.TABLE_HTS + "("            + Constant.htsId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.stateId + " INTEGER,"            + Constant.lgaId + " INTEGER,"            + Constant.facilityId + " INTEGER,"            + Constant.facilityName + " TEXT,"            + Constant.referredFrom + " TEXT,"            + Constant.testingSetting + " TEXT,"            + Constant.surname + " TEXT,"            + Constant.otherNames + " TEXT,"            + Constant.dateBirth + " TEXT,"            + Constant.age + " NUMBER,"            + Constant.ageUnit + " TEXT,"            + Constant.dateVisit + " TEXT,"            + Constant.phone + " TEXT,"            + Constant.address + " TEXT,"            + Constant.clientCode + " TEXT,"            + Constant.gender + " TEXT,"            + Constant.firstTimeVisit + " TEXT,"            + Constant.state + " TEXT,"            + Constant.lga + " TEXT,"            + Constant.hospitalNum + " TEXT,"            + Constant.indexType + " TEXT,"            + Constant.dateConfirmedHiv + " TEXT,"            + Constant.dateEnrolledHivCare + " TEXT,"            + Constant.clientIndexCode + " TEXT,"            + Constant.notificationCounseling + " TEXT,"            + Constant.agreeNotification + " TEXT,"            + Constant.numberPartner + " TEXT,"            + Constant.dateEnrolledHivCase + " TEXT," +            Constant.maritalStatus + " TEXT," +            Constant.numChildren + " NUMBER," +            Constant.numWives + " NUMBER," +            Constant.typeCounseling + " TEXT," +            Constant.indexClient + " TEXT," +            Constant.typeIndex + " TEXT," +            Constant.indexClientCode + " TEXT," +            Constant.knowledgeAssessment1 + " INTEGER," +            Constant.knowledgeAssessment2 + " INTEGER," +            Constant.knowledgeAssessment3 + " INTEGER," +            Constant.knowledgeAssessment4 + " INTEGER," +            Constant.knowledgeAssessment5 + " INTEGER," +            Constant.knowledgeAssessment6 + " INTEGER," +            Constant.knowledgeAssessment7 + " INTEGER," +            Constant.riskAssessment1 + " INTEGER," +            Constant.riskAssessment2 + " INTEGER," +            Constant.riskAssessment3 + " INTEGER," +            Constant.riskAssessment4 + " INTEGER," +            Constant.riskAssessment5 + " INTEGER," +            Constant.riskAssessment6 + " INTEGER," +            Constant.tbScreening1 + " INTEGER," +            Constant.tbScreening2 + " INTEGER," +            Constant.tbScreening3 + " INTEGER," +            Constant.tbScreening4 + " INTEGER," +            Constant.stiScreening1 + " INTEGER," +            Constant.stiScreening2 + " INTEGER," +            Constant.stiScreening3 + " INTEGER," +            Constant.stiScreening4 + " INTEGER," +            Constant.stiScreening5 + " INTEGER," +            Constant.deviceId + " LONG," +            Constant.hivTestResult + " TEXT," +            Constant.testedHiv + " TEXT," +            Constant.postTest1 + " INTEGER," +            Constant.postTest2 + " INTEGER," +            Constant.postTest3 + " INTEGER," +            Constant.postTest4 + " INTEGER," +            Constant.postTest5 + " INTEGER," +            Constant.postTest6 + " INTEGER," +            Constant.postTest7 + " INTEGER," +            Constant.postTest8 + " INTEGER," +            Constant.postTest9 + " INTEGER," +            Constant.postTest10 + " INTEGER," +            Constant.postTest11 + " INTEGER," +            Constant.postTest12 + " INTEGER," +            Constant.postTest13 + " INTEGER," +            Constant.postTest14 + " INTEGER," +            Constant.syphilisTestResult + " TEXT," +            Constant.hepatitisbTestResult + " TEXT," +            Constant.hepatitiscTestResult + " TEXT," +            Constant.note + " TEXT," +            Constant.dateRegistration + " TEXT," +            Constant.dateStarted + " TEXT," +            Constant.artReferred + " TEXT," +            Constant.longitude + " FLOAT," +            Constant.latitude + " FLOAT," +            Constant.tbReferred + " TEXT," +            Constant.stiReferred + " TEXT," +            Constant.pmtctReferred + " TEXT," +            Constant.uploaded + " INTEGER," +            Constant.timeUploaded + " NUMERIC " +            ")";    private String CREATE__REGIMEN_TYPE_TABLE = "CREATE TABLE " + Constant.TABLE_TYPE_REGIMEN + "("            + Constant.regimentypeId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.description + "  TEXT"            +            ")";    private String CREATE__REGIMEN_TABLE = "CREATE TABLE " + Constant.TABLE_REGIMEN + "("            + Constant.regimenId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.regimentype + "  TEXT,"            + Constant.regimentype_id + "  INTEGER,"            + Constant.regimen + "  TEXT"            +            ")";    private String CREATE_FACILITY_TABLE = "CREATE TABLE " + Constant.TABLE_FACILITY + "("            + Constant.id + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.facilityId + "  INTEGER,"            + Constant.facilityName + " TEXT,"            + Constant.stateId + " INTEGER,"            + Constant.lgaId + " INTEGER,"            + Constant.deviceId + " TEXT" +            ")";    private String CREATE_STATE_TABLE = "CREATE TABLE " + Constant.TABLE_STATE + "("            + Constant.id + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.stateId + " INTEGER,"            + Constant.name + " TEXT" +            ")";    private String CREATE_LGA_TABLE = "CREATE TABLE " + Constant.TABLE_LGA + "("            + Constant.id + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.lgaId + " INTEGER,"            + Constant.name + " TEXT,"            + Constant.stateId + " INTEGER" +            ")";    private String CREATE_WAR_TABLE = "CREATE TABLE " + Constant.TABLE_WARD + "("            + Constant.wardId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.wardName + " TEXT,"            + Constant.lgaId + " TEXT" +            ")";    private String CREATE_BIOMETRIC_TABLE = "CREATE TABLE " + Constant.TABLE_BIOMETRIC + "("            + Constant.id + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.facilityId + " LONG,"            + Constant.template + " TEXT,"            + Constant.patientId + " LONG,"            + Constant.templateType + " BLOB,"            + Constant.enrollmentDate + " TEXT,"            + Constant.biometricType + " TEXT" +            ")";    private String CREATE_STATUS_HISTORY_TABLE = "CREATE TABLE " + Constant.TABLE_STATUS_HISTORY + "("            + Constant.historyId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.patientId + " LONG,"            + Constant.facilityId + " LONG,"            + Constant.currentStatus + " TEXT,"            + Constant.dateCurrentStatus + " TEXT,"            + Constant.reasonInterrupt + " TEXT,"            + Constant.causeDeath + " TEXT,"            + Constant.dateTracked + " TEXT,"            + Constant.outcome + " TEXT,"            + Constant.agreedDate + " TEXT" +            ")";    private String CREATE_DEFAULTER_TABLE = "CREATE TABLE " + Constant.TABLE_DEFAULTER + "("            + Constant.defaulterId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.patientId + " LONG,"            + Constant.hospitalNum + " TEXT,"            + Constant.facilityId + " LONG,"            + Constant.surname + " TEXT,"            + Constant.othername + " TEXT,"            + Constant.address + " TEXT,"            + Constant.phone + " TEXT,"            + Constant.phoneKin + " TEXT,"            + Constant.addressKin + " TEXT,"            + Constant.nextKin + " TEXT,"            + Constant.currentStatus + " TEXT,"            + Constant.dateCurrentStatus + " TEXT,"            + Constant.dateNextClinic + " TEXT,"            + Constant.dateNextRefill + " TEXT" +            ")";    private String CREATE_PATIENT_TABLE = "CREATE TABLE " + Constant.TABLE_PATIENT + "("            + Constant.patientId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.facilityId + "  TEXT,"            + Constant.hospitalNum + " TEXT,"            + Constant.uniqueId + " TEXT,"            + Constant.surname + " TEXT,"            + Constant.otherNames + " TEXT,"            + Constant.gender + " TEXT,"            + Constant.dateBirth + " TEXT,"            + Constant.age + " INTEGER,"            + Constant.lga + " TEXT,"            + Constant.maritalStatus + " TEXT,"            + Constant.education + " TEXT,"            + Constant.occupation + " TEXT,"            + Constant.address + " TEXT,"            + Constant.phone + " TEXT,"            + Constant.state + " TEXT,"            + Constant.nextKin + " TEXT,"            + Constant.dateRegistration + " TEXT,"            + Constant.addressKin + " TEXT,"            + Constant.tbStatus + " TEXT,"            + Constant.phoneKin + " TEXT,"            + Constant.relationKin + " TEXT,"            + Constant.entryPoint + " TEXT,"            + Constant.targetGroup + " TEXT,"            + Constant.deviceId + " LONG,"            + Constant.dateConfirmedHiv + " TEXT,"            + Constant.htsId + " INTEGER,"            + Constant.ageUnit + " TEXT,"            + Constant.statusRegistration + " TEXT,"            + Constant.pregnant + " INTEGER,"            + Constant.breastfeeding + " INTEGER,"            + Constant.uploaded + " TEXT,"            + Constant.timeUploaded + " TEXT"            +            ")";    private String CREATE_CLINIC_TABLE = "CREATE TABLE " + Constant.TABLE_CLINIC + "("            + Constant.clinicId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.patientId + "  TEXT,"            + Constant.facilityId + " TEXT,"            + Constant.dateVisit + " TEXT,"            + Constant.clinicStage + " TEXT,"            + Constant.funcStatus + " TEXT,"            + Constant.tbStatus + " TEXT,"            + Constant.viralLoad + " DOUBLE,"            + Constant.bodyWeight + " DOUBLE,"            + Constant.regimenType + " TEXT,"            + Constant.regimen + " TEXT,"            + Constant.height + " DOUBLE,"            + Constant.waist + " DOUBLE,"            + Constant.bp + " TEXT,"            + Constant.nextAppointment + " TEXT,"            + Constant.notes + " TEXT,"            + Constant.userId + " INTEGER,"            + Constant.pregnant + " INTEGER,"            + Constant.uploaded + " TEXT," +            Constant.deviceId + " LONG," +            Constant.timeUploaded + " TEXT"            +            ")";    private String CREATE_ASSESSMENT_TABLE = "CREATE TABLE " + Constant.TABLE_ASSESSMENT + "("            + Constant.assessmentId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.facilityId + " TEXT,"            + Constant.dateVisit + " TEXT,"            + Constant.clientCode + " TEXT,"            + Constant.question1 + " INTEGER,"            + Constant.question2 + " TEXT,"            + Constant.question3 + " INTEGER,"            + Constant.question4 + " INTEGER,"            + Constant.question5 + " INTEGER,"            + Constant.question6 + " INTEGER,"            + Constant.question7 + " INTEGER,"            + Constant.question8 + " INTEGER,"            + Constant.question9 + " INTEGER,"            + Constant.question10 + " INTEGER,"            + Constant.question11 + " INTEGER,"            + Constant.deviceId + " LONG" +            ")";    private String CREATE_GEOLOCATION_TABLE = "CREATE TABLE " + Constant.TABLE_GEO_LOCATION + "("            + Constant.id + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.testingSetting + " TEXT,"            + Constant.name + " TEXT,"            + Constant.longitude + " FLOAT,"            + Constant.latitude + " FLOAT" +            ")";    private String CREATE_CAMTEAM__TABLE = "CREATE TABLE " + Constant.TABLE_CAM_TEAM + "("            + Constant.id + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.facilityId + " LONG,"            + Constant.camteam + " TEXT,"            + Constant.camCode + " TEXT" +            ")";    private String CREATE_RECENCY_TABLE = "CREATE TABLE " + Constant.TABLE_RECENCY + "("            + Constant.recencyId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.recencyNumber + " TEXT,"            + Constant.htsId + " LONG,"            + Constant.testName + " TEXT,"            + Constant.testDate + " TEXT,"            + Constant.controlLine + " LONG,"            + Constant.verificationLine + " LONG,"            + Constant.longTimeLine + " LONG,"            + Constant.recencyInterpretation + " TEXT" +            ")";    private String CREATE_VIRAL_LOAD_TABLE = "CREATE TABLE " + Constant.TABLE_VIRAL_LOAD + "("            + Constant.viralId + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.recencyNumber + " TEXT,"            + Constant.sampleReferenceNumber + " TEXT,"            + Constant.viralLoadResultClassification + " TEXT,"            + Constant.dateSampleCollected + " TEXT,"            + Constant.typeSample + " TEXT,"            + Constant.dateSampleTest + " TEXT,"            + Constant.dateTestDone + " TEXT,"            + Constant.viralLoadResult + " TEXT,"            + Constant.finalResult + " TEXT" +            ")";    private final String CREATE_ANC_TABLE = "CREATE TABLE " + Constant.TABLE_ANC + "("            + Constant.id + " INTEGER PRIMARY KEY AUTOINCREMENT,"            + Constant.lmp + " TEXT,"            + Constant.ancNum + " TEXT,"            + Constant.facilityId + " TEXT,"            + Constant.facilityName + " TEXT,"            + Constant.gestationalAge + " INTEGER,"            + Constant.gravida + " INTEGER,"            + Constant.parity + " INTEGER,"            + Constant.sourceReferral + " TEXT,"            + Constant.syphilisTested + " INTEGER,"            + Constant.syphilisTreated + " INTEGER"            +            ")";    public static LAMISLiteDb getInstance(Context context) {        if (instance == null) {            instance = new LAMISLiteDb(context.getApplicationContext());        }        return instance;    }    public LAMISLiteDb(Context context) {        super(context, Constant.DATABASE_NAME, null, Constant.DATABASE_VERSION);    }    @Override    public void onCreate(SQLiteDatabase db) {        createDataBase(db, 1, Constant.DATABASE_VERSION);    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {        updateDataBase(db, oldVersion, newVersion);    }    private void createDataBase(SQLiteDatabase db, int oldVersion, int newVersion) {        db.execSQL(CREATE_HTS_TABLE);        db.execSQL(CREATE_FACILITY_TABLE);        db.execSQL(CREATE_STATE_TABLE);        db.execSQL(CREATE_LGA_TABLE);        db.execSQL(CREATE_PATIENT_TABLE);        db.execSQL(CREATE_CLINIC_TABLE);        db.execSQL(CREATE_INDEX_CONTACT_TABLE);        db.execSQL(CREATE__REGIMEN_TYPE_TABLE);        db.execSQL(CREATE__REGIMEN_TABLE);        db.execSQL(CREATE_ASSESSMENT_TABLE);        db.execSQL(CREATE_STATUS_HISTORY_TABLE);        db.execSQL(CREATE_DEFAULTER_TABLE);        db.execSQL(CREATE_GEOLOCATION_TABLE);        db.execSQL(CREATE_CAMTEAM__TABLE);        db.execSQL(CREATE_RECENCY_TABLE);        db.execSQL(CREATE_VIRAL_LOAD_TABLE);        db.execSQL(CREATE_BIOMETRIC_TABLE);        db.execSQL(CREATE_WAR_TABLE);        db.execSQL(CREATE_ANC_TABLE);        db.execSQL("ALTER TABLE assessment ADD COLUMN date_last_tested TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN assessment_id LONG");        db.execSQL("ALTER TABLE hts ADD COLUMN cam_code TEXT");        db.execSQL("ALTER TABLE patient ADD COLUMN biometric INTEGER");        db.execSQL("ALTER TABLE patient ADD COLUMN uuid TEXT");        db.execSQL("ALTER TABLE patient ADD COLUMN pid LONG");        db.execSQL("ALTER TABLE biometric ADD COLUMN uuid TEXT");        db.execSQL("ALTER TABLE clinic ADD COLUMN uuid TEXT");        db.execSQL("ALTER TABLE clinic ADD COLUMN clinic_uuid TEXT");        db.execSQL("ALTER TABLE biometric ADD COLUMN buuid TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN next_kin_name TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN next_kin_phone TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN next_kin_address TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN next_kin_descriptive_address TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN next_kin_street TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN next_kin_city TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN next_kin_landmark TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN ward TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN anc_no TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN TEST_RESULT TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN CONFIRMATORY_TEST_RESULT TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN TIE_BREAKER_TEST_RESULT  TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN date_uploaded TEXT");        db.execSQL("ALTER TABLE assessment ADD COLUMN date_uploaded TEXT");        db.execSQL("ALTER TABLE recency ADD COLUMN date_uploaded TEXT");        db.execSQL("ALTER TABLE patient ADD COLUMN date_uploaded TEXT");        db.execSQL("ALTER TABLE clinic ADD COLUMN date_uploaded TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN initial_test_result TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN retest_result TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN retest_confirmatory_result  TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN retest_tie_breaker_result TEXT");        db.execSQL("ALTER TABLE hts ADD COLUMN super_tester_name TEXT");        db.execSQL("ALTER TABLE ASSESSMENT ADD COLUMN gbv_1 INTEGER");        db.execSQL("ALTER TABLE ASSESSMENT ADD COLUMN gbv_2 INTEGER");    }    private void updateDataBase(SQLiteDatabase db, int oldVersion, int newVersion) {        System.out.println("OLD " + oldVersion);        System.out.println("newVersion " + newVersion);        if (newVersion > 3) {//            db.execSQL("ALTER TABLE hts ADD COLUMN TEST_RESULT TEXT");//            db.execSQL("ALTER TABLE hts ADD COLUMN CONFIRMATORY_TEST_RESULT TEXT");//            db.execSQL("ALTER TABLE hts ADD COLUMN TIE_BREAKER_TEST_RESULT  TEXT");            db.execSQL("ALTER TABLE hts ADD COLUMN date_uploaded TEXT");            db.execSQL("ALTER TABLE hts ADD COLUMN initial_test_result TEXT");            db.execSQL("ALTER TABLE hts ADD COLUMN retest_result TEXT");            db.execSQL("ALTER TABLE hts ADD COLUMN retest_confirmatory_result  TEXT");            db.execSQL("ALTER TABLE hts ADD COLUMN retest_tie_breaker_result TEXT");            db.execSQL("ALTER TABLE hts ADD COLUMN super_tester_name TEXT");            db.execSQL("ALTER TABLE ASSESSMENT ADD COLUMN gbv_1 INTEGER");            db.execSQL("ALTER TABLE ASSESSMENT ADD COLUMN gbv_2 INTEGER");//            db.execSQL("ALTER TABLE assessment ADD COLUMN date_uploaded TEXT");//            db.execSQL("ALTER TABLE recency ADD COLUMN date_uploaded TEXT");//            db.execSQL("ALTER TABLE patient ADD COLUMN date_uploaded TEXT");//            db.execSQL("ALTER TABLE clinic ADD COLUMN date_uploaded TEXT");            // db.execSQL("ALTER TABLE assessment ADD COLUMN date_last_tested TEXT");            //pls dont forget uncheck            // db.execSQL(CREATE_WAR_TABLE);//          db.execSQL(CREATE_BIOMETRIC_TABLE);            // db.execSQL(CREATE_ANC_TABLE);            // db.execSQL("ALTER TABLE hts ADD COLUMN risk_satisfication_code String");//            db.execSQL("ALTER TABLE patient ADD COLUMN uuid TEXT");//            db.execSQL("ALTER TABLE patient ADD COLUMN pid LONG");//            db.execSQL("ALTER TABLE biometric ADD COLUMN uuid TEXT");//            db.execSQL("ALTER TABLE clinic ADD COLUMN uuid TEXT");//            db.execSQL("ALTER TABLE clinic ADD COLUMN clinic_uuid TEXT");//            db.execSQL("ALTER TABLE biometric ADD COLUMN buuid TEXT");//            db.execSQL("ALTER TABLE hts ADD COLUMN ward TEXT");//            db.execSQL("ALTER TABLE hts ADD COLUMN anc_no TEXT");            //  System.out.println("success " + newVersion);        }    }}